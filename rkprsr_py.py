# -*- coding: utf-8 -*-
"""RkPrSr.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PrUa0SGnFlPFRp8XWMSeeal-FH6j1trv
"""

import streamlit as st
import tensorflow as tf
from keras.preprocessing import image
from keras.applications.vgg16 import preprocess_input
import numpy as np
from PIL import Image

# Load the pre-trained model
model = tf.keras.models.load_model('./my_model.keras')

# Define class labels
class_labels = ['Rock', 'Paper', 'Scissors']

# Function to preprocess the uploaded image
def load_and_preprocess_image(img):
    img = img.resize((224, 224))  # Resize to match the model's input size
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array = preprocess_input(img_array)
    return img_array

# Function to predict the gesture
def predict_gesture(img):
    processed_img = load_and_preprocess_image(img)
    prediction = model.predict(processed_img)
    predicted_class = np.argmax(prediction, axis=1)
    return class_labels[predicted_class[0]]

# Streamlit app UI
st.title("Rock-Paper-Scissors Predictor")

st.write("Upload two images of Rock, Paper, or Scissors to see which one wins.")

# Upload two images
uploaded_file1 = st.file_uploader("Choose the first image...", type=["jpg", "jpeg", "png"])
uploaded_file2 = st.file_uploader("Choose the second image...", type=["jpg", "jpeg", "png"])

if uploaded_file1 and uploaded_file2:
    img1 = Image.open(uploaded_file1)
    img2 = Image.open(uploaded_file2)

    st.image([img1, img2], caption=["First Image", "Second Image"], use_column_width=True)

    # Predict gestures
    gesture1 = predict_gesture(img1)
    gesture2 = predict_gesture(img2)

    st.write(f"First Image is: {gesture1}")
    st.write(f"Second Image is: {gesture2}")

    # Determine the winner
    if gesture1 == gesture2:
        st.write("It's a tie!")
    elif (gesture1 == 'Rock' and gesture2 == 'Scissors') or \
         (gesture1 == 'Scissors' and gesture2 == 'Paper') or \
         (gesture1 == 'Paper' and gesture2 == 'Rock'):
        st.write("First Image wins!")
    else:
        st.write("Second Image wins!")

import tensorflow as tf
from keras.preprocessing import image
from keras.applications.vgg16 import preprocess_input
import numpy as np
from PIL import Image
import streamlit as st

# Load the pre-trained model
model = tf.keras.models.load_model('./my_model.keras')

# Define class labels
class_labels = ['Rock', 'Paper', 'Scissors']

# Function to preprocess the uploaded image
def load_and_preprocess_image(img):
    img = img.convert('RGB')  # Ensure the image is in RGB format
    img = img.resize((224, 224))  # Resize the image to 224x224 pixels
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array = preprocess_input(img_array)
    return img_array

# Function to predict the gesture
def predict_gesture(img):
    processed_img = load_and_preprocess_image(img)
    prediction = model.predict(processed_img)
    predicted_class = np.argmax(prediction, axis=1)
    return class_labels[predicted_class[0]]

# Streamlit app UI
st.title("Rock-Paper-Scissors Predictor")

st.write("Upload two images of Rock, Paper, or Scissors to see which one wins.")

# Upload two images
uploaded_file1 = st.file_uploader("Choose the first image...", type=["jpg", "jpeg", "png"])
uploaded_file2 = st.file_uploader("Choose the second image...", type=["jpg", "jpeg", "png"])

if uploaded_file1 and uploaded_file2:
    img1 = Image.open(uploaded_file1)
    img2 = Image.open(uploaded_file2)

    st.image([img1, img2], caption=["First Image", "Second Image"], use_column_width=True)

    # Predict gestures
    gesture1 = predict_gesture(img1)
    gesture2 = predict_gesture(img2)

    st.write(f"First Image is: {gesture1}")
    st.write(f"Second Image is: {gesture2}")

    # Determine the winner
    if gesture1 == gesture2:
        st.write("It's a tie!")
    elif (gesture1 == 'Rock' and gesture2 == 'Scissors') or \
         (gesture1 == 'Scissors' and gesture2 == 'Paper') or \
         (gesture1 == 'Paper' and gesture2 == 'Rock'):
        st.write("First Image wins!")
    else:
        st.write("Second Image wins!")

